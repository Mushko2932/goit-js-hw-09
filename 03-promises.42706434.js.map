{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,UAAWC,SAASC,cAAc,SAClCC,WAAYF,SAASC,cAAc,eACnCE,UAAWH,SAASC,cAAc,cAClCG,YAAaJ,SAASC,cAAc,gBACpCI,UAAWL,SAASC,cAAc,iBA6BpC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAS,CAAEF,WAAUC,SACrBE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQL,GAGRM,EAAON,E,GAERD,E,IAtCOV,EAATC,UAAUkB,iBAAiB,UAGD,SAATC,GACpBA,EAAEC,iBAIF,IAFA,IAAIC,EAAQC,OAAOvB,EAAKC,UAAUS,MAAMc,OAE/BC,EAAI,EAAGA,GAAKzB,EAAKC,UAAUyB,OAAOF,MAAOC,GAAK,EACrDjB,EAAciB,EAAGH,GACdK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA/B,GAASgC,OAAOI,QACd,sBAAuCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGnDY,GAASC,OAAOvB,EAAKC,UAAUkC,KAAKX,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// отримуємо посилання\nconst refs = {\n  formValue: document.querySelector('.form'),\n  inputDelay: document.querySelector('name[delay]'),\n  inputStep: document.querySelector('name[step]'),\n  inputAmount: document.querySelector('name[amount]'),\n  btnCreate: document.querySelector('type[submit]'),\n};\n\n// вішаємо слухача\nrefs.formValue.addEventListener('submit', onSubmitForm);\n\n// створюємо ф-ю на момент сабміту форми\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.formValue.delay.value);\n\n  for (let i = 1; i <= refs.formValue.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += Number(refs.formValue.step.value);\n  }\n}\n\n// повертаємо один проміс\nfunction createPromise(position, delay) {\n  const object = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(object);\n      } else {\n        // Reject\n        reject(object);\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formValue","document","querySelector","inputDelay","inputStep","inputAmount","btnCreate","$ce04d3a99e08e73b$var$createPromise","position","delay","object","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","step"],"version":3,"file":"03-promises.42706434.js.map"}